using FluentMigrator;
using FluentMigrator.SqlServer;
using FoundersPC.Persistence.Migrations.Common;

namespace FoundersPC.Persistence.Migrations.Migrations._2021._12._19;

[FoundersPCMigration(2021_12_19_1, "Add Metadata Values")]
public class AddMetadataValues : Migration
{
    private const int CaseType = 1;
    private const int DiskConnectionInterface = 2;
    private const int DiskFactor = 3;
    private const int MotherboardFactor = 4;
    private const int RamMode = 5;
    private const int RAMType = 6;
    private const int Socket = 7;
    private const int WindowMaterial = 8;
    private const int Color = 9;
    private const int Material = 10;
    private const int TechProcess = 11;
    private const int Country = 12;
    private const int MotherboardPowering = 13;
    private const int VideoMemory = 14;

    public override void Up()
    {
        Alter.Table("Metadata")
             .AlterColumn("CreatedById").AsInt32().WithDefaultValue(1)
             .AlterColumn("LastModifiedById").AsInt32().WithDefaultValue(1)
             .AlterColumn("Created").AsDateTime().WithDefault(SystemMethods.CurrentUTCDateTime)
             .AlterColumn("LastModified").AsDateTime().WithDefault(SystemMethods.CurrentUTCDateTime);

        var startId = 0;

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = CaseType, Name = "Full-Desktop" })
              .Row(new { Id = ++startId, Type = CaseType, Name = "Full-Tower" })
              .Row(new { Id = ++startId, Type = CaseType, Name = "HTPC" })
              .Row(new { Id = ++startId, Type = CaseType, Name = "Micro-Tower" })
              .Row(new { Id = ++startId, Type = CaseType, Name = "Midi-Tower" })
              .Row(new { Id = ++startId, Type = CaseType, Name = "Mini-Tower" })
              .Row(new { Id = ++startId, Type = CaseType, Name = "Slim-Desktop" })
              .Row(new { Id = ++startId, Type = CaseType, Name = "Super-Tower" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "Fibre Channel" })
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "SAS" })
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "SATA 1.5Gb/s" })
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "SATA 3Gb/s" })
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "SATA 6Gb/s" })
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "PCI-E" })
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "mini PCI-E" })
              .Row(new { Id = ++startId, Type = DiskConnectionInterface, Name = "SCSI" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = DiskFactor, Name = "3.5\"" })
              .Row(new { Id = ++startId, Type = DiskFactor, Name = "2.5\"" })
              .Row(new { Id = ++startId, Type = DiskFactor, Name = "2242" })
              .Row(new { Id = ++startId, Type = DiskFactor, Name = "2260" })
              .Row(new { Id = ++startId, Type = DiskFactor, Name = "2280" })
              .Row(new { Id = ++startId, Type = DiskFactor, Name = "HHHL" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "ATX" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "EATX" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "microATX" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "mini-DTX" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "mini-ITX" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "mini-STX" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "SBC" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "SSI CEB" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "SSI EEB" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "thin mini-ITX" })
              .Row(new { Id = ++startId, Type = MotherboardFactor, Name = "Non standard" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = RamMode, Name = "1x" })
              .Row(new { Id = ++startId, Type = RamMode, Name = "2x" })
              .Row(new { Id = ++startId, Type = RamMode, Name = "4x" })
              .Row(new { Id = ++startId, Type = RamMode, Name = "8x" })
              .Row(new { Id = ++startId, Type = RamMode, Name = "16x" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = RAMType, Name = "DDR" })
              .Row(new { Id = ++startId, Type = RAMType, Name = "DDR2" })
              .Row(new { Id = ++startId, Type = RAMType, Name = "DDR3" })
              .Row(new { Id = ++startId, Type = RAMType, Name = "DDR3L" })
              .Row(new { Id = ++startId, Type = RAMType, Name = "DDR4" })
              .Row(new { Id = ++startId, Type = RAMType, Name = "DDR5" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = Socket, Name = "AM3+" })
              .Row(new { Id = ++startId, Type = Socket, Name = "AM4" })
              .Row(new { Id = ++startId, Type = Socket, Name = "FM2+" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA1150" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA1151" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA1151 v2" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA1155" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA1156" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA1200" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA1700" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA2011-3" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA2066" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA3647 (Socket P)" })
              .Row(new { Id = ++startId, Type = Socket, Name = "LGA775" })
              .Row(new { Id = ++startId, Type = Socket, Name = "M" })
              .Row(new { Id = ++startId, Type = Socket, Name = "SP3" })
              .Row(new { Id = ++startId, Type = Socket, Name = "sTRX4" })
              .Row(new { Id = ++startId, Type = Socket, Name = "TR4" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = WindowMaterial, Name = "Acrylic" })
              .Row(new { Id = ++startId, Type = WindowMaterial, Name = "Strained glass" })
              .Row(new { Id = ++startId, Type = Socket, Name = "Aluminum" })
              .Row(new { Id = ++startId, Type = Socket, Name = "Strained glass" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = Color, Name = "Beige" })
              .Row(new { Id = ++startId, Type = Color, Name = "White" })
              .Row(new { Id = ++startId, Type = Color, Name = "Yellow" })
              .Row(new { Id = ++startId, Type = Color, Name = "Green" })
              .Row(new { Id = ++startId, Type = Color, Name = "Golden" })
              .Row(new { Id = ++startId, Type = Color, Name = "Red" })
              .Row(new { Id = ++startId, Type = Color, Name = "Orange" })
              .Row(new { Id = ++startId, Type = Color, Name = "Transparent" })
              .Row(new { Id = ++startId, Type = Color, Name = "Multicolor" })
              .Row(new { Id = ++startId, Type = Color, Name = "Pink" })
              .Row(new { Id = ++startId, Type = Color, Name = "Silver" })
              .Row(new { Id = ++startId, Type = Color, Name = "Gray" })
              .Row(new { Id = ++startId, Type = Color, Name = "Blue" })
              .Row(new { Id = ++startId, Type = Color, Name = "Violet" })
              .Row(new { Id = ++startId, Type = Color, Name = "Black" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = Material, Name = "Aluminum" })
              .Row(new { Id = ++startId, Type = Material, Name = "Steel" })
              .Row(new { Id = ++startId, Type = Material, Name = "Plastic" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = TechProcess, Name = "7 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "10 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "12 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "14 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "22 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "28 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "32 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "45 nm" })
              .Row(new { Id = ++startId, Type = TechProcess, Name = "65 nm" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = Country, Name = "Afghanistan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Albania"})
              .Row(new { Id = ++startId, Type = Country, Name = "Algeria"})
              .Row(new { Id = ++startId, Type = Country, Name = "Andorra"})
              .Row(new { Id = ++startId, Type = Country, Name = "Angola"})
              .Row(new { Id = ++startId, Type = Country, Name = "Antigua & Deps"})
              .Row(new { Id = ++startId, Type = Country, Name = "Argentina"})
              .Row(new { Id = ++startId, Type = Country, Name = "Armenia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Australia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Austria"})
              .Row(new { Id = ++startId, Type = Country, Name = "Azerbaijan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Bahamas"})
              .Row(new { Id = ++startId, Type = Country, Name = "Bahrain"})
              .Row(new { Id = ++startId, Type = Country, Name = "Bangladesh"})
              .Row(new { Id = ++startId, Type = Country, Name = "Barbados"})
              .Row(new { Id = ++startId, Type = Country, Name = "Belarus"})
              .Row(new { Id = ++startId, Type = Country, Name = "Belgium"})
              .Row(new { Id = ++startId, Type = Country, Name = "Belize"})
              .Row(new { Id = ++startId, Type = Country, Name = "Benin"})
              .Row(new { Id = ++startId, Type = Country, Name = "Bhutan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Bolivia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Bosnia Herzegovina"})
              .Row(new { Id = ++startId, Type = Country, Name = "Botswana"})
              .Row(new { Id = ++startId, Type = Country, Name = "Brazil"})
              .Row(new { Id = ++startId, Type = Country, Name = "Brunei"})
              .Row(new { Id = ++startId, Type = Country, Name = "Bulgaria"})
              .Row(new { Id = ++startId, Type = Country, Name = "Burkina"})
              .Row(new { Id = ++startId, Type = Country, Name = "Burundi"})
              .Row(new { Id = ++startId, Type = Country, Name = "Cambodia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Cameroon"})
              .Row(new { Id = ++startId, Type = Country, Name = "Canada"})
              .Row(new { Id = ++startId, Type = Country, Name = "Cape Verde"})
              .Row(new { Id = ++startId, Type = Country, Name = "Central African Rep"})
              .Row(new { Id = ++startId, Type = Country, Name = "Chad"})
              .Row(new { Id = ++startId, Type = Country, Name = "Chile"})
              .Row(new { Id = ++startId, Type = Country, Name = "China"})
              .Row(new { Id = ++startId, Type = Country, Name = "Colombia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Comoros"})
              .Row(new { Id = ++startId, Type = Country, Name = "Congo"})
              .Row(new { Id = ++startId, Type = Country, Name = "Congo {Democratic Rep}"})
              .Row(new { Id = ++startId, Type = Country, Name = "Costa Rica"})
              .Row(new { Id = ++startId, Type = Country, Name = "Croatia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Cuba"})
              .Row(new { Id = ++startId, Type = Country, Name = "Cyprus"})
              .Row(new { Id = ++startId, Type = Country, Name = "Czech Republic"})
              .Row(new { Id = ++startId, Type = Country, Name = "Denmark"})
              .Row(new { Id = ++startId, Type = Country, Name = "Djibouti"})
              .Row(new { Id = ++startId, Type = Country, Name = "Dominica"})
              .Row(new { Id = ++startId, Type = Country, Name = "Dominican Republic"})
              .Row(new { Id = ++startId, Type = Country, Name = "East Timor"})
              .Row(new { Id = ++startId, Type = Country, Name = "Ecuador"})
              .Row(new { Id = ++startId, Type = Country, Name = "Egypt"})
              .Row(new { Id = ++startId, Type = Country, Name = "El Salvador"})
              .Row(new { Id = ++startId, Type = Country, Name = "Equatorial Guinea"})
              .Row(new { Id = ++startId, Type = Country, Name = "Eritrea"})
              .Row(new { Id = ++startId, Type = Country, Name = "Estonia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Ethiopia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Fiji"})
              .Row(new { Id = ++startId, Type = Country, Name = "Finland"})
              .Row(new { Id = ++startId, Type = Country, Name = "France"})
              .Row(new { Id = ++startId, Type = Country, Name = "Gabon"})
              .Row(new { Id = ++startId, Type = Country, Name = "Gambia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Georgia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Germany"})
              .Row(new { Id = ++startId, Type = Country, Name = "Ghana"})
              .Row(new { Id = ++startId, Type = Country, Name = "Greece"})
              .Row(new { Id = ++startId, Type = Country, Name = "Grenada"})
              .Row(new { Id = ++startId, Type = Country, Name = "Guatemala"})
              .Row(new { Id = ++startId, Type = Country, Name = "Guinea"})
              .Row(new { Id = ++startId, Type = Country, Name = "Guinea-Bissau"})
              .Row(new { Id = ++startId, Type = Country, Name = "Guyana"})
              .Row(new { Id = ++startId, Type = Country, Name = "Haiti"})
              .Row(new { Id = ++startId, Type = Country, Name = "Honduras"})
              .Row(new { Id = ++startId, Type = Country, Name = "Hungary"})
              .Row(new { Id = ++startId, Type = Country, Name = "Iceland"})
              .Row(new { Id = ++startId, Type = Country, Name = "India"})
              .Row(new { Id = ++startId, Type = Country, Name = "Indonesia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Iran"})
              .Row(new { Id = ++startId, Type = Country, Name = "Iraq"})
              .Row(new { Id = ++startId, Type = Country, Name = "Ireland Republic"})
              .Row(new { Id = ++startId, Type = Country, Name = "Israel"})
              .Row(new { Id = ++startId, Type = Country, Name = "Italy"})
              .Row(new { Id = ++startId, Type = Country, Name = "Ivory Coast"})
              .Row(new { Id = ++startId, Type = Country, Name = "Jamaica"})
              .Row(new { Id = ++startId, Type = Country, Name = "Japan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Jordan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Kazakhstan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Kenya"})
              .Row(new { Id = ++startId, Type = Country, Name = "Kiribati"})
              .Row(new { Id = ++startId, Type = Country, Name = "Korea North"})
              .Row(new { Id = ++startId, Type = Country, Name = "Korea South"})
              .Row(new { Id = ++startId, Type = Country, Name = "Kosovo"})
              .Row(new { Id = ++startId, Type = Country, Name = "Kuwait"})
              .Row(new { Id = ++startId, Type = Country, Name = "Kyrgyzstan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Laos"})
              .Row(new { Id = ++startId, Type = Country, Name = "Latvia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Lebanon"})
              .Row(new { Id = ++startId, Type = Country, Name = "Lesotho"})
              .Row(new { Id = ++startId, Type = Country, Name = "Liberia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Libya"})
              .Row(new { Id = ++startId, Type = Country, Name = "Liechtenstein"})
              .Row(new { Id = ++startId, Type = Country, Name = "Lithuania"})
              .Row(new { Id = ++startId, Type = Country, Name = "Luxembourg"})
              .Row(new { Id = ++startId, Type = Country, Name = "Macedonia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Madagascar"})
              .Row(new { Id = ++startId, Type = Country, Name = "Malawi"})
              .Row(new { Id = ++startId, Type = Country, Name = "Malaysia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Maldives"})
              .Row(new { Id = ++startId, Type = Country, Name = "Mali"})
              .Row(new { Id = ++startId, Type = Country, Name = "Malta"})
              .Row(new { Id = ++startId, Type = Country, Name = "Marshall Islands"})
              .Row(new { Id = ++startId, Type = Country, Name = "Mauritania"})
              .Row(new { Id = ++startId, Type = Country, Name = "Mauritius"})
              .Row(new { Id = ++startId, Type = Country, Name = "Mexico"})
              .Row(new { Id = ++startId, Type = Country, Name = "Micronesia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Moldova"})
              .Row(new { Id = ++startId, Type = Country, Name = "Monaco"})
              .Row(new { Id = ++startId, Type = Country, Name = "Mongolia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Montenegro"})
              .Row(new { Id = ++startId, Type = Country, Name = "Morocco"})
              .Row(new { Id = ++startId, Type = Country, Name = "Mozambique"})
              .Row(new { Id = ++startId, Type = Country, Name = "Myanmar, Burma"})
              .Row(new { Id = ++startId, Type = Country, Name = "Namibia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Nauru"})
              .Row(new { Id = ++startId, Type = Country, Name = "Nepal"})
              .Row(new { Id = ++startId, Type = Country, Name = "Netherlands"})
              .Row(new { Id = ++startId, Type = Country, Name = "New Zealand"})
              .Row(new { Id = ++startId, Type = Country, Name = "Nicaragua"})
              .Row(new { Id = ++startId, Type = Country, Name = "Niger"})
              .Row(new { Id = ++startId, Type = Country, Name = "Nigeria"})
              .Row(new { Id = ++startId, Type = Country, Name = "Norway"})
              .Row(new { Id = ++startId, Type = Country, Name = "Oman"})
              .Row(new { Id = ++startId, Type = Country, Name = "Pakistan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Palau"})
              .Row(new { Id = ++startId, Type = Country, Name = "Panama"})
              .Row(new { Id = ++startId, Type = Country, Name = "Papua New Guinea"})
              .Row(new { Id = ++startId, Type = Country, Name = "Paraguay"})
              .Row(new { Id = ++startId, Type = Country, Name = "Peru"})
              .Row(new { Id = ++startId, Type = Country, Name = "Philippines"})
              .Row(new { Id = ++startId, Type = Country, Name = "Poland"})
              .Row(new { Id = ++startId, Type = Country, Name = "Portugal"})
              .Row(new { Id = ++startId, Type = Country, Name = "Qatar"})
              .Row(new { Id = ++startId, Type = Country, Name = "Romania"})
              .Row(new { Id = ++startId, Type = Country, Name = "Russian Federation"})
              .Row(new { Id = ++startId, Type = Country, Name = "Rwanda"})
              .Row(new { Id = ++startId, Type = Country, Name = "St Kitts & Nevis"})
              .Row(new { Id = ++startId, Type = Country, Name = "St Lucia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Saint Vincent & the Grenadines"})
              .Row(new { Id = ++startId, Type = Country, Name = "Samoa"})
              .Row(new { Id = ++startId, Type = Country, Name = "San Marino"})
              .Row(new { Id = ++startId, Type = Country, Name = "Sao Tome & Principe"})
              .Row(new { Id = ++startId, Type = Country, Name = "Saudi Arabia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Senegal"})
              .Row(new { Id = ++startId, Type = Country, Name = "Serbia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Seychelles"})
              .Row(new { Id = ++startId, Type = Country, Name = "Sierra Leone"})
              .Row(new { Id = ++startId, Type = Country, Name = "Singapore"})
              .Row(new { Id = ++startId, Type = Country, Name = "Slovakia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Slovenia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Solomon Islands"})
              .Row(new { Id = ++startId, Type = Country, Name = "Somalia"})
              .Row(new { Id = ++startId, Type = Country, Name = "South Africa"})
              .Row(new { Id = ++startId, Type = Country, Name = "South Sudan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Spain"})
              .Row(new { Id = ++startId, Type = Country, Name = "Sri Lanka"})
              .Row(new { Id = ++startId, Type = Country, Name = "Sudan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Suriname"})
              .Row(new { Id = ++startId, Type = Country, Name = "Swaziland"})
              .Row(new { Id = ++startId, Type = Country, Name = "Sweden"})
              .Row(new { Id = ++startId, Type = Country, Name = "Switzerland"})
              .Row(new { Id = ++startId, Type = Country, Name = "Syria"})
              .Row(new { Id = ++startId, Type = Country, Name = "Taiwan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Tajikistan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Tanzania"})
              .Row(new { Id = ++startId, Type = Country, Name = "Thailand"})
              .Row(new { Id = ++startId, Type = Country, Name = "Togo"})
              .Row(new { Id = ++startId, Type = Country, Name = "Tonga"})
              .Row(new { Id = ++startId, Type = Country, Name = "Trinidad & Tobago"})
              .Row(new { Id = ++startId, Type = Country, Name = "Tunisia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Turkey"})
              .Row(new { Id = ++startId, Type = Country, Name = "Turkmenistan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Tuvalu"})
              .Row(new { Id = ++startId, Type = Country, Name = "Uganda"})
              .Row(new { Id = ++startId, Type = Country, Name = "Ukraine"})
              .Row(new { Id = ++startId, Type = Country, Name = "United Arab Emirates"})
              .Row(new { Id = ++startId, Type = Country, Name = "United Kingdom"})
              .Row(new { Id = ++startId, Type = Country, Name = "United States"})
              .Row(new { Id = ++startId, Type = Country, Name = "Uruguay"})
              .Row(new { Id = ++startId, Type = Country, Name = "Uzbekistan"})
              .Row(new { Id = ++startId, Type = Country, Name = "Vanuatu"})
              .Row(new { Id = ++startId, Type = Country, Name = "Vatican City"})
              .Row(new { Id = ++startId, Type = Country, Name = "Venezuela"})
              .Row(new { Id = ++startId, Type = Country, Name = "Vietnam"})
              .Row(new { Id = ++startId, Type = Country, Name = "Yemen"})
              .Row(new { Id = ++startId, Type = Country, Name = "Zambia"})
              .Row(new { Id = ++startId, Type = Country, Name = "Zimbabwe"});

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = MotherboardPowering, Name = "24 pin" })
              .Row(new { Id = ++startId, Type = MotherboardPowering, Name = "20+8 pin" })
              .Row(new { Id = ++startId, Type = MotherboardPowering, Name = "20+4 pin" });

        Insert.IntoTable("Metadata")
              .WithIdentityInsert()
              .Row(new { Id = ++startId, Type = VideoMemory, Name = "GDDR2" })
              .Row(new { Id = ++startId, Type = VideoMemory, Name = "GDDR3" })
              .Row(new { Id = ++startId, Type = VideoMemory, Name = "GDDR4" })
              .Row(new { Id = ++startId, Type = VideoMemory, Name = "GDDR5" })
              .Row(new { Id = ++startId, Type = VideoMemory, Name = "GDDR6" })
              .Row(new { Id = ++startId, Type = VideoMemory, Name = "GDDR6X" })
              .Row(new { Id = ++startId, Type = VideoMemory, Name = "HBM2" });
    }

    public override void Down()
    {
        Delete.FromTable("Metadata")
              .AllRows();
    }
}