// <auto-generated />

#region Using namespaces

using System;
using FoundersPC.Identity.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#endregion

namespace FoundersPC.Identity.Infrastructure.Migrations
{
    [DbContext(typeof(FoundersPCUsersContext))]
    internal class FoundersPCUsersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
            #pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy",
                               SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoundersPC.Identity.Domain.Entities.RoleEntity",
                                b =>
                                {
                                    b.Property<int>("Id")
                                     .ValueGeneratedOnAdd()
                                     .HasColumnType("int")
                                     .HasColumnName("Id")
                                     .HasAnnotation("SqlServer:ValueGenerationStrategy",
                                                    SqlServerValueGenerationStrategy.IdentityColumn);

                                    b.Property<string>("RoleTitle")
                                     .IsRequired()
                                     .HasColumnType("nvarchar(max)");

                                    b.HasKey("Id");

                                    b.ToTable("Roles");
                                });

            modelBuilder.Entity("FoundersPC.Identity.Domain.Entities.UserEntity",
                                b =>
                                {
                                    b.Property<int>("Id")
                                     .ValueGeneratedOnAdd()
                                     .HasColumnType("int")
                                     .HasColumnName("Id")
                                     .HasAnnotation("SqlServer:ValueGenerationStrategy",
                                                    SqlServerValueGenerationStrategy.IdentityColumn);

                                    b.Property<string>("Email")
                                     .IsRequired()
                                     .HasMaxLength(128)
                                     .HasColumnType("nvarchar(128)");

                                    b.Property<string>("HashedPassword")
                                     .IsRequired()
                                     .HasMaxLength(128)
                                     .HasColumnType("nvarchar(128)");

                                    b.Property<bool>("IsActive")
                                     .HasColumnType("bit");

                                    b.Property<bool>("IsBlocked")
                                     .HasColumnType("bit");

                                    b.Property<string>("Login")
                                     .HasMaxLength(30)
                                     .HasColumnType("nvarchar(30)");

                                    b.Property<DateTime>("RegistrationDate")
                                     .HasColumnType("datetime2");

                                    b.Property<int>("RoleId")
                                     .HasColumnType("int");

                                    b.HasKey("Id");

                                    b.HasIndex("Id");

                                    b.HasIndex("RoleId");

                                    b.ToTable("Users");
                                });

            modelBuilder.Entity("FoundersPC.Identity.Domain.Entities.UserEntity",
                                b =>
                                {
                                    b.HasOne("FoundersPC.Identity.Domain.Entities.RoleEntity", "Role")
                                     .WithMany("Users")
                                     .HasForeignKey("RoleId")
                                     .OnDelete(DeleteBehavior.Restrict)
                                     .IsRequired();

                                    b.Navigation("Role");
                                });

            modelBuilder.Entity("FoundersPC.Identity.Domain.Entities.RoleEntity",
                                b => b.Navigation("Users"));
            #pragma warning restore 612, 618
        }
    }
}